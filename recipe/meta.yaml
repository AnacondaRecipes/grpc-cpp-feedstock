{% set name = "grpc-cpp" %}
{% set version = "1.38.0" %}

package:
  name: {{ name | lower }}
  version: {{ version }}

# It is not currently possible to compile grpc-cpp on Windows in shared mode:
# _h_env\Library\include\google/protobuf/io/coded_stream.h(1250):
#   warning C4251: 'google::protobuf::io::CodedOutputStream::default_serialization_deterministic_': struct 'std::atomic<bool>'
#   needs to have dll-interface to be used by clients of class 'google::protobuf::io::CodedOutputStream'
# LINK : fatal error LNK1181: cannot open input file 'gpr.lib'
# .. and, considering that this constrains a lot of things like openssl, I have decided to unify to static builds on all platforms.
# {% set static_build = 'yes' %}  # [win]
# {% set static_build = 'no' %}  # [not win]
{% set static_build = 'no' %}

{% if static_build == 'yes' %}
{% set libext = '.lib' %}  # [win]
{% set libext = '.a' %}  # [not win]
{% else %}
{% set libext = '.dll' %}  # [win]
{% set libext = '.so' %}  # [linux]
{% set libext = '.dylib' %}  # [osx]
{% endif %}

source:
  url: https://github.com/grpc/grpc/archive/v{{ version }}.tar.gz
  sha256: abd9e52c69000f2c051761cfa1f12d52d8b7647b6c66828a91d462e796f2aede
  patches:
    - aarch64-tcp-header.patch  # [aarch64]
    - force-protoc-executable.patch

build:
  number: 0
  run_exports:
    - {{ pin_subpackage('grpc-cpp', max_pin='x.x') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    # `protoc` is also used for building
    - libprotobuf
    - ninja
    # We need all host deps also in build for cross-compiling
    - abseil-cpp  # [build_platform != target_platform]
    - c-ares      # [build_platform != target_platform]
    - re2         # [build_platform != target_platform]
    - openssl     # [build_platform != target_platform]
    - zlib        # [build_platform != target_platform]
  host:
    - abseil-cpp
    - c-ares
    - libprotobuf
    - re2
    - openssl
    - zlib
  run:
    - zlib

test:
  files:
    - tests/include/*
  commands:
    - grpc_cpp_plugin < /dev/null  # [not win]
    - grpc_cpp_plugin < NUL  # [win]

    - test -f $PREFIX/lib/libgrpc{{ libext }}  # [not win]
    - test -f $PREFIX/lib/libgrpc_unsecure{{ libext }}  # [not win]
    - test -f $PREFIX/lib/libgrpc++{{ libext }}  # [not win]
    - test -f $PREFIX/lib/libgrpc++_unsecure{{ libext }}  # [not win]

    - if not exist %PREFIX%\\Library\\lib\\address_sorting{{ libext }} exit 1  # [win]
    - if not exist %PREFIX%\\Library\\lib\\gpr{{ libext }} exit 1  # [win]
    - if not exist %PREFIX%\\Library\\lib\\grpc{{ libext }} exit 1  # [win]
    - if not exist %PREFIX%\\Library\\lib\\grpc++{{ libext }} exit 1  # [win]

about:
  home: https://grpc.io/
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE
  summary: gRPC - A high-performance, open-source universal RPC framework
  description: |
    gRPC is a modern, open source, high-performance remote procedure call
    (RPC) framework that can run anywhere. gRPC enables client and server
    applications to communicate transparently, and simplifies the building
    of connected systems.

    This package contains the gRPC C++ libraries and header files, as well
    as the code generation plugins.
  doc_url: https://grpc.io/docs/

extra:
  recipe-maintainers:
    - pitrou
    - xhochy
    - wesm
